{"meta":{"title":"OVO","subtitle":null,"description":"我也不知道怎么给你说，因为我只是一只小白兔(。-ω-)zzz","author":"OvO","url":"https://ayame.fun","root":"/"},"pages":[{"title":"所有分类","date":"2020-02-18T05:54:27.870Z","updated":"2020-02-18T05:54:27.870Z","comments":true,"path":"categories/index.html","permalink":"https://ayame.fun/categories/index.html","excerpt":"","text":""},{"title":"关于","date":"2020-02-18T07:04:04.479Z","updated":"2020-02-18T07:04:04.479Z","comments":true,"path":"about/index.html","permalink":"https://ayame.fun/about/index.html","excerpt":"","text":"缓慢建设中…"},{"title":"所有标签","date":"2020-02-20T05:26:14.990Z","updated":"2020-02-20T05:26:14.990Z","comments":true,"path":"tags/index.html","permalink":"https://ayame.fun/tags/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2020-02-18T05:56:18.914Z","updated":"2020-02-18T05:56:18.914Z","comments":true,"path":"friends/index.html","permalink":"https://ayame.fun/friends/index.html","excerpt":"","text":"这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"},{"title":"","date":"2020-02-18T05:55:42.336Z","updated":"2020-02-18T05:55:42.336Z","comments":true,"path":"mylist/index.html","permalink":"https://ayame.fun/mylist/index.html","excerpt":"","text":""},{"title":"项目","date":"2020-02-18T10:13:11.219Z","updated":"2020-02-18T10:13:11.219Z","comments":true,"path":"projects/index.html","permalink":"https://ayame.fun/projects/index.html","excerpt":"","text":""}],"posts":[{"title":"小小的知识增加了","slug":"小知识","date":"2020-05-15T15:06:26.000Z","updated":"2020-05-15T15:14:24.553Z","comments":true,"path":"2020/05/15/小知识/","link":"","permalink":"https://ayame.fun/2020/05/15/%E5%B0%8F%E7%9F%A5%E8%AF%86/","excerpt":"Java中getResourceAsStream的用法","text":"Java中getResourceAsStream的用法 学习参考：Java中getResourceAsStream的用法 - 西晒甲山 - 博客园 java知识点之getClass().getResourceAsStream 今日迷惑在于路径参数的不理解，区别在于“/”的引用；带有”/“的路径为根路径下寻找资源，不带”/“的路径为当前类所在的包下寻找资源","categories":[{"name":"小知识","slug":"小知识","permalink":"https://ayame.fun/categories/%E5%B0%8F%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"java基础","slug":"java基础","permalink":"https://ayame.fun/tags/java%E5%9F%BA%E7%A1%80/"}]},{"title":"java","slug":"java反射","date":"2020-05-14T14:01:26.000Z","updated":"2020-05-14T14:41:21.357Z","comments":true,"path":"2020/05/14/java反射/","link":"","permalink":"https://ayame.fun/2020/05/14/java%E5%8F%8D%E5%B0%84/","excerpt":"什么是反射？反射就是Reflection，Java的反射是指程序在运行期可以拿到一个对象的所有信息。","text":"什么是反射？反射就是Reflection，Java的反射是指程序在运行期可以拿到一个对象的所有信息。 学习参考：廖雪峰的官方网站 java反射–Class类 java中，除去基本类型，其他类型都是class(包括interface)而class是通过JVM在执行时动态加载，JVM第一次读取到某class类时，将其加入到内存，每个加入的class都会为其创建一个Class类型的实例，这个实例中存放着该类的全部信息，继而获取到这个Class类型的实例，就可以对这个类进行一些列的操作，这个过程就叫反射 java反射方式有三 直接通过一个class的静态变量class获取1String cls = String.class; 如果我们有一个实例变量，可以通过该实例变量提供的getClass()方法获取12String str = \"hello wrold!\";Class cls = str.getClass(); 如果知道一个class的完整类名，可以通过静态方法Class.forName()获取1Class cls = Class.forName(\"java.lang.String\"); Class实例的一些API1234567class.getName(); //获取类名class.getSimpleName();class.getPackage(); //获取包名class.isInterface(); //是否是一个接口class.isEnum(); //是否是一个枚举类class.isArray(); class.isPremitive(); Class获取类信息 获取字段Field 获取方法Method 获取构造方法Constructor 获取父类SuperClass 访问字段 Field getField(name)：根据字段名获取某个public的field（包括父类） Field getDeclaredField(name)：根据字段名获取当前类的某个field（不包括父类） Field[] getFields()：获取所有public的field（包括父类） Field[] getDeclaredFields()：获取当前类的所有field（不包括父类） 通过FIeld对象可以获取到类的字段的具体信息，例如数据类型，字段名称，修饰符等**通常情况下只能访问到public修饰的字段，而若想访问private修饰的字段，需要先设置Field.setAccessible(true)**既然可以访问字段，那么当然也可以设置字段的值，通过Field.set(Object,Object)可以对传入的实例对象进行设置值，但通常并不建议这么做. 访问方法 Method getMethod(name, Class…)：获取某个public的Method（包括父类 Method getDeclaredMethod(name, Class…)：获取当前类的某个Method（不包括父类） Method[] getMethods()：获取所有public的Method（包括父类） Method[] getDeclaredMethods()：获取当前类的所有Method（不包括父类） 上述的返回值Method对象即是某个方法的具体信息，可以通过getName()：返回方法名称getReturnType()：返回方法返回值类型，是一个Class实例getParameterTypes()：返回方法的参数类型，是一个Class数组getModifiers()：返回方法的修饰符，它是一个int 调用方法通过invoke来实现，Method.invoke(Object,Object)，参数分别为调用该方法的对象及参数，当调用静态方法时，第一个对象参数需传入null，同样的，若想要调用private修饰的方法，需要先设置Method.setAccessible(true)，不过这个设置并不是一定会生效.","categories":[{"name":"java","slug":"java","permalink":"https://ayame.fun/categories/java/"}],"tags":[{"name":"java基础 反射","slug":"java基础-反射","permalink":"https://ayame.fun/tags/java%E5%9F%BA%E7%A1%80-%E5%8F%8D%E5%B0%84/"}]},{"title":"学习路上markdown","slug":"学习路上markdown","date":"2020-05-13T10:57:10.000Z","updated":"2020-05-13T12:55:57.568Z","comments":true,"path":"2020/05/13/学习路上markdown/","link":"","permalink":"https://ayame.fun/2020/05/13/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E4%B8%8Amarkdown/","excerpt":"Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面，Markdown文件的后缀名便是“.md”","text":"Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面，Markdown文件的后缀名便是“.md” 学习参考 http://www.mdeditor.com/和https://www.appinn.com/markdown/ 以下分别是使用方法和示例 1# 标题H1 标题H11## 标题H2 标题H21### 标题H3 标题H31#### 标题H4 标题H41##### 标题H5 标题H51### 字符效果和横线等 字符效果和横线等1---- 1~~删除线~~ 删除线 1*斜体字* 斜体字 1**粗体字** 粗体字 1*** 粗斜体 *** 粗斜体 1上标 X&lt;sup&gt;2&lt;&#x2F;sup&gt; 下标 Y&lt;sub&gt;3&lt;&#x2F;sub&gt; 上标X2 下标Y3 1&gt; 区块引用Blockquotes 引用文本 Blockquotes换行后不加&gt;箭头也会归属为该Blockquotes 1234567锚点与链接Links [链接文字](url 链接提示信息)锚点与连链接 &lt;直接链接url&gt; [锚点链接][anchor-id] [anchor-id]:https:&#x2F;&#x2F;ayame.fun 链接邮箱地址: [mailto:741641521@qq.com](mailto:741641521@qq.com &quot;发送邮件给该邮箱&quot;) Markdwon语法链接https://www.appinn.com/markdown/[锚点链接][ anchor-id ][ anchor-id ]: https://ayame.funmailto:741641521@qq.com 12? 代码高亮 Codes? 行内代码 inline code 代码的使用是在开始```标签后面加入对应代码格式，如下示例js代码123function test()&#123; console.log(\"hello world!\");&#125; 12345678910&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;title&gt;No Title&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;我是一个div&lt;/div&gt; &lt;p&gt;我是一个段落&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 1图片 ![Alt text](url &quot;title&quot;) 12345678910111213以下符号前加入反斜杠，可以实现其本意符号的书写\\ 反斜线&#96; 反引号* 星号_ 底线&#123;&#125; 花括号[] 方括号() 括弧# 井字号+ 加号- 减号. 英文句点! 惊叹号 1234无序列表，以下三种效果相同，并可以相互嵌套(-)(+)(*) 列表1 列表1.1 列表1.2 列表2 列表3 1234有序列表1. 第一行2. 第二行3. 第三行 第一行 第二行 第三行 123选择框- [x] 选中- [ ] 未选中 选中 未选中 123456绘制表格:| 姓名 | 年龄 | 性别|| ----|-----|-----|| 张三 | 18 | 男 || 李四 | 19 | 女 | 姓名 年龄 性别 张三 18 男 李四 19 女","categories":[{"name":"基础知识","slug":"基础知识","permalink":"https://ayame.fun/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://ayame.fun/tags/Markdown/"}]}]}