<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小小的知识增加了</title>
      <link href="/2020/05/15/%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
      <url>/2020/05/15/%E5%B0%8F%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<p>Java中getResourceAsStream的用法</p><a id="more"></a><p>学习参考：<a href="https://www.cnblogs.com/macwhirr/p/8116583.html" target="_blank" rel="noopener">Java中getResourceAsStream的用法 - 西晒甲山 - 博客园</a></p><h3 id="java知识点之getClass-getResourceAsStream"><a href="#java知识点之getClass-getResourceAsStream" class="headerlink" title="java知识点之getClass().getResourceAsStream"></a>java知识点之getClass().getResourceAsStream</h3><blockquote><p>今日迷惑在于路径参数的不理解，区别在于“/”的引用；<br>带有”/“的路径为根路径下寻找资源，不带”/“的路径为当前类所在的包下寻找资源</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java</title>
      <link href="/2020/05/14/java%E5%8F%8D%E5%B0%84/"/>
      <url>/2020/05/14/java%E5%8F%8D%E5%B0%84/</url>
      
        <content type="html"><![CDATA[<blockquote><p>什么是反射？<br>反射就是Reflection，Java的反射是指程序在运行期可以拿到一个对象的所有信息。</p></blockquote><a id="more"></a><p>学习参考：<a href="https://www.liaoxuefeng.com/wiki/1252599548343744/1255945147512512" target="_blank" rel="noopener">廖雪峰的官方网站</a></p><hr><h3 id="java反射–Class类"><a href="#java反射–Class类" class="headerlink" title="java反射–Class类"></a>java反射–Class类</h3><blockquote><p>java中，除去基本类型，其他类型都是class(包括interface)<br>而class是通过JVM在执行时动态加载，JVM第一次读取到某class类时，将其加入到内存，<br>每个加入的class都会为其创建一个Class类型的实例，这个实例中存放着该类的全部信息，<br>继而获取到这个Class类型的实例，就可以对这个类进行一些列的操作，这个过程就叫反射</p></blockquote><h3 id="java反射方式有三"><a href="#java反射方式有三" class="headerlink" title="java反射方式有三"></a>java反射方式有三</h3><ol><li>直接通过一个class的静态变量class获取<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String cls = String<span class="class">.<span class="keyword">class</span></span>;</span><br></pre></td></tr></table></figure></li><li>如果我们有一个实例变量，可以通过该实例变量提供的getClass()方法获取<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">"hello wrold!"</span>;</span><br><span class="line">Class cls = str.getClass();</span><br></pre></td></tr></table></figure></li><li>如果知道一个class的完整类名，可以通过静态方法Class.forName()获取<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class cls = Class.forName(<span class="string">"java.lang.String"</span>);</span><br></pre></td></tr></table></figure></li></ol><h3 id="Class实例的一些API"><a href="#Class实例的一些API" class="headerlink" title="Class实例的一些API"></a>Class实例的一些API</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span>.<span class="title">getName</span>()</span>;  <span class="comment">//获取类名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span>.<span class="title">getSimpleName</span>()</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span>.<span class="title">getPackage</span>()</span>;  <span class="comment">//获取包名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span>.<span class="title">isInterface</span>()</span>;  <span class="comment">//是否是一个接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span>.<span class="title">isEnum</span>()</span>;  <span class="comment">//是否是一个枚举类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span>.<span class="title">isArray</span>()</span>; </span><br><span class="line"><span class="class"><span class="keyword">class</span>.<span class="title">isPremitive</span>()</span>;</span><br></pre></td></tr></table></figure><h3 id="Class获取类信息"><a href="#Class获取类信息" class="headerlink" title="Class获取类信息"></a>Class获取类信息</h3><ul><li>获取字段Field</li><li>获取方法Method</li><li>获取构造方法Constructor</li><li>获取父类SuperClass</li></ul><h3 id="访问字段"><a href="#访问字段" class="headerlink" title="访问字段"></a>访问字段</h3><ul><li>Field getField(name)：根据字段名获取某个public的field（包括父类）</li><li>Field getDeclaredField(name)：根据字段名获取当前类的某个field（不包括父类）</li><li>Field[] getFields()：获取所有public的field（包括父类）</li><li>Field[] getDeclaredFields()：获取当前类的所有field（不包括父类）</li></ul><p><strong>通过FIeld对象可以获取到类的字段的具体信息，例如数据类型，字段名称，修饰符等<br>**通常情况下只能访问到public修饰的字段，而若想访问private修饰的字段，需要先设置Field.setAccessible(true)</strong><br>**既然可以访问字段，那么当然也可以设置字段的值，通过Field.set(Object,Object)可以对传入的实例对象进行设置值，但通常并不建议这么做.</p><h3 id="访问方法"><a href="#访问方法" class="headerlink" title="访问方法"></a>访问方法</h3><ul><li>Method getMethod(name, Class…)：获取某个public的Method（包括父类</li><li>Method getDeclaredMethod(name, Class…)：获取当前类的某个Method（不包括父类）</li><li>Method[] getMethods()：获取所有public的Method（包括父类）</li><li>Method[] getDeclaredMethods()：获取当前类的所有Method（不包括父类）</li></ul><p>上述的返回值Method对象即是某个方法的具体信息，可以通过<br>getName()：返回方法名称<br>getReturnType()：返回方法返回值类型，是一个Class实例<br>getParameterTypes()：返回方法的参数类型，是一个Class数组<br>getModifiers()：返回方法的修饰符，它是一个int</p><p><strong>调用方法通过invoke来实现，Method.invoke(Object,Object)，参数分别为调用该方法的对象及参数，当调用静态方法时，第一个对象参数需传入null，同样的，若想要调用private修饰的方法，需要先设置Method.setAccessible(true)，不过这个设置并不是一定会生效.</strong></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java基础 反射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习路上markdown</title>
      <link href="/2020/05/13/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E4%B8%8Amarkdown/"/>
      <url>/2020/05/13/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E4%B8%8Amarkdown/</url>
      
        <content type="html"><![CDATA[<p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面，Markdown文件的后缀名便是“.md”</p><a id="more"></a><h2 id="学习参考-http-www-mdeditor-com-和https-www-appinn-com-markdown"><a href="#学习参考-http-www-mdeditor-com-和https-www-appinn-com-markdown" class="headerlink" title="学习参考 http://www.mdeditor.com/和https://www.appinn.com/markdown/"></a>学习参考 <a href="http://www.mdeditor.com/" target="_blank" rel="noopener">http://www.mdeditor.com/</a>和<a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">https://www.appinn.com/markdown/</a></h2><hr><hr><h3 id="以下分别是使用方法和示例"><a href="#以下分别是使用方法和示例" class="headerlink" title="以下分别是使用方法和示例"></a>以下分别是使用方法和示例</h3><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 标题H1</span><br></pre></td></tr></table></figure><h1 id="标题H1"><a href="#标题H1" class="headerlink" title="标题H1"></a>标题H1</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## 标题H2</span><br></pre></td></tr></table></figure><h2 id="标题H2"><a href="#标题H2" class="headerlink" title="标题H2"></a>标题H2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">### 标题H3</span><br></pre></td></tr></table></figure><h3 id="标题H3"><a href="#标题H3" class="headerlink" title="标题H3"></a>标题H3</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#### 标题H4</span><br></pre></td></tr></table></figure><h4 id="标题H4"><a href="#标题H4" class="headerlink" title="标题H4"></a>标题H4</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">##### 标题H5</span><br></pre></td></tr></table></figure><h5 id="标题H5"><a href="#标题H5" class="headerlink" title="标题H5"></a>标题H5</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">### 字符效果和横线等</span><br></pre></td></tr></table></figure><h3 id="字符效果和横线等"><a href="#字符效果和横线等" class="headerlink" title="字符效果和横线等"></a>字符效果和横线等</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">----</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><p><del>删除线</del></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*斜体字*</span><br></pre></td></tr></table></figure><p><em>斜体字</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**粗体字**</span><br></pre></td></tr></table></figure><p><strong>粗体字</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*** 粗斜体 ***</span><br></pre></td></tr></table></figure><p><strong><em>粗斜体</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">上标 X&lt;sup&gt;2&lt;&#x2F;sup&gt;  下标 Y&lt;sub&gt;3&lt;&#x2F;sub&gt;</span><br></pre></td></tr></table></figure><p>上标X<sup>2</sup>  下标Y<sub>3</sub></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 区块引用Blockquotes</span><br></pre></td></tr></table></figure><blockquote><p>引用文本 Blockquotes<br>换行后不加&gt;箭头也会归属为该Blockquotes</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">锚点与链接Links</span><br><span class="line">[链接文字](url  链接提示信息)锚点与连链接</span><br><span class="line">&lt;直接链接url&gt;</span><br><span class="line">[锚点链接][anchor-id]</span><br><span class="line">[anchor-id]:https:&#x2F;&#x2F;ayame.fun</span><br><span class="line">链接邮箱地址:</span><br><span class="line">[mailto:741641521@qq.com](mailto:741641521@qq.com  &quot;发送邮件给该邮箱&quot;)</span><br></pre></td></tr></table></figure><p><a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener" title="Markdwon语法链接">Markdwon语法链接</a><br><a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">https://www.appinn.com/markdown/</a><br>[锚点链接][ anchor-id ]<br>[ anchor-id ]: <a href="https://ayame.fun">https://ayame.fun</a><br><a href="mailto:741641521@qq.com" title="发送邮件给该邮箱">mailto:741641521@qq.com</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">? 代码高亮 Codes</span><br><span class="line">? 行内代码 inline code</span><br></pre></td></tr></table></figure><h4 id="代码的使用是在开始-标签后面加入对应代码格式，如下示例"><a href="#代码的使用是在开始-标签后面加入对应代码格式，如下示例" class="headerlink" title="代码的使用是在开始```标签后面加入对应代码格式，如下示例"></a>代码的使用是在开始```标签后面加入对应代码格式，如下示例</h4><h5 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"hello world!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>No Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>我是一个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">图片 ![Alt text](url &quot;title&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/imanoobtoo/imapic/img/111.png" alt="一张图片" title="Ayame酱"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">以下符号前加入反斜杠，可以实现其本意符号的书写</span><br><span class="line">\   反斜线</span><br><span class="line">&#96;   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   底线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  括弧</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   惊叹号</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">无序列表，以下三种效果相同，并可以相互嵌套</span><br><span class="line">(-)</span><br><span class="line">(+)</span><br><span class="line">(*)</span><br></pre></td></tr></table></figure><ul><li>列表1<ul><li>列表1.1</li><li>列表1.2</li></ul></li><li>列表2</li><li>列表3</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">有序列表</span><br><span class="line">1. 第一行</span><br><span class="line">2. 第二行</span><br><span class="line">3. 第三行</span><br></pre></td></tr></table></figure><ol><li>第一行</li><li>第二行</li><li>第三行</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择框</span><br><span class="line">- [x] 选中</span><br><span class="line">- [ ] 未选中</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> 选中</li><li><input disabled="" type="checkbox"> 未选中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">绘制表格:</span><br><span class="line"></span><br><span class="line">| 姓名 | 年龄 | 性别|</span><br><span class="line">| ----|-----|-----|</span><br><span class="line">| 张三 | 18  | 男  |</span><br><span class="line">| 李四 | 19  | 女  |</span><br></pre></td></tr></table></figure><table><thead><tr><th>姓名</th><th>年龄</th><th>性别</th></tr></thead><tbody><tr><td>张三</td><td>18</td><td>男</td></tr><tr><td>李四</td><td>19</td><td>女</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
